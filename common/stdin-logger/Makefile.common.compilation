#
# Copyright   Actility, SA. All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License version
# 2 only, as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License version 2 for more details (a copy is
# included at /legal/license.txt).
#
# You should have received a copy of the GNU General Public License
# version 2 along with this work; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA
#
# Please contact Actility, SA.,  4, rue Ampere 22300 LANNION FRANCE
# or visit www.actility.com if you need additional
# information or have any questions.
#
# id $Id: Makefile.common.compilation 1285 2011-11-04 09:51:43Z JReich $  
# author $Author: JReich $
# version $Revision: 1285 $
# lastrevision $Date: 2011-11-04 10:51:43 +0100 (Fri, 04 Nov 2011) $
# modifiedby $LastChangedBy: JReich $
# lastmodified $LastChangedDate: 2011-11-04 10:51:43 +0100 (Fri, 04 Nov 2011) $

###############################################################################
# Common makefile for all compilation options
# Author: mlouiset
# Date: 2010-09-23
###############################################################################

# Specify compiler
ifeq ($(TARGET),cov1)
  CC = arm-linux-gcc
  GCC = arm-linux-g++
  LD = arm-linux-gcc
  AR = arm-linux-ar
  # Specify compiler options
  CFLAGS = -mcpu=arm920t -Wall -O3 -fPIC -pipe
  LDFLAGS = -mcpu=arm920t 
  LDLIBS = 
  ARCH = cov1
  INCLUDES+=$(CO_V1_HOST_HOME)/include/
else ifeq ($(TARGET),cov2)
  CC = arm-none-linux-gnueabi-gcc
  GCC = arm-none-linux-gnueabi-g++
  LD = arm-none-linux-gnueabi-gcc
  AR = arm-none-linux-gnueabi-ar
  # Specify compiler options
  CFLAGS = -mcpu=arm920t -Wall -O3 -fPIC -pipe
  LDFLAGS = -mcpu=arm920t
  LDLIBS =
  ARCH = cov2
  INCLUDES+=$(CO_V2_HOST_HOME)/include/
else ifeq ($(TARGET),lpv3)
  CC = mips-openwrt-linux-uclibc-gcc
  GCC = mips-openwrt-linux-uclibc-g++
  LD = mips-openwrt-linux-uclibc-gcc
  AR = mips-openwrt-linux-uclibc-ar
  # Specify compiler options
  CFLAGS = -Wall -O3 -fPIC -pipe
  LDFLAGS =
  LDLIBS =
  ARCH = lpv3
  INCLUDES+=$(LP_V3_HOST_HOME)/include/
else ifeq ($(TARGET),android_panrouter)
  CC = arm-android-gnueabi-gcc
  GCC = arm-android-gnueabi-g++
  LD = arm-android-gnueabi-gcc
  AR = arm-android-gnueabi-ar
  # Specify compiler options
  CFLAGS =
  LDFLAGS =
  LDLIBS =
  ARCH = android_panrouter
  INCLUDES+=$(ANDROID_PANROUTER_HOST_HOME)/usr/include/
else ifeq ($(TARGET),rpib)
  CC = arm-poky-linux-gnueabi-gcc -march=armv6 -mthumb-interwork -mfloat-abi=softfp --sysroot=$(TOOLCHAIN_HOME)/sysroots/armv6-vfp-poky-linux-gnueabi/
  GCC = arm-poky-linux-gnueabi-g++ -march=armv6 -mthumb-interwork -mfloat-abi=softfp --sysroot=$(TOOLCHAIN_HOME)/sysroots/armv6-vfp-poky-linux-gnueabi/
  LD = arm-poky-linux-gnueabi-ld --sysroot=$(TOOLCHAIN_HOME)/sysroots/armv6-vfp-poky-linux-gnueabi/
  AR = arm-poky-linux-gnueabi-ar
  # Specify compiler options
  CFLAGS = -O2 -pipe -g -feliminate-unused-debug-types
  LDFLAGS = -Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed
  LDLIBS =
  ARCH = rpib
  INCLUDES+=$TOOLCHAIN_HOME/sysroots/armv6-vfp-poky-linux-gnueabi//usr/include/
else ifeq ($(TARGET),centos6-x86)
  CC = cc
  GCC = g++
  LD = cc
  AR = ar
  # Specify compiler options
  CFLAGS = -Wall -g -O3 -fPIC -pipe
  LDFLAGS =
  LDLIBS =
  ARCH = centos6-x86
else
  CC = cc
  GCC = g++
  LD = cc
  AR = ar
  # Specify compiler options
  CFLAGS = -Wall -g -fPIC -pipe
  LDFLAGS = 
  LDLIBS = 
  ARCH = $(shell echo `uname`"-"`uname -m` | tr -s [A-Z] [a-z])
endif

ifdef EXTRA_CFLAGS
  CFLAGS += $(EXTRA_CFLAGS)
endif

ZAP_CONFIG_VARS = $(foreach file,$(ZAP_CONFIG_FILES),$(shell [ $(file)"X" != "X" ] && [ -f $(file) ] && egrep "^-D" $(file) | cut -f1 -d/))

INC_OPTIONS := $(foreach file,$(INCLUDES), -I$(file))
DEF_OPTIONS := $(foreach var,$(DEFINES), -D$(var)) $(ZAP_CONFIG_VARS)

empty :=
space := $(empty) $(empty)
SRC_VPATH = $(subst $(space),:,$(strip $(SRC_PATH)))

vpath %.o $(OBJS_TARGET)
vpath %.c $(SRC_VPATH)
vpath %.cxx $(SRC_VPATH)


